import assert

x1 = ^{ "x1" }
x2 = ^{
  foo = "foo"
  "x2"
}
x3 = ^{
  foo = "foo"
  if (foo == "foo")
    "x3"
}
assert.equal x1(), "x1"
assert.equal x2(), "x2"
assert.equal x3(), "x3"

x4 = ^(foo){
  if (foo == "foo")
    "x4-1"
  else
    "x4-2"
}
assert.equal x4("foo"), "x4-1"
assert.equal x4("boll"), "x4-2"

x5 = ^(foo){
  if (foo == "foo")
    "x5-1"
  else if (foo == "bar")
    "x5-2"
  else
    "x5-3"
}
assert.equal x5("foo"), "x5-1"
assert.equal x5("bar"), "x5-2"
assert.equal x5("xxx"), "x5-3"

x6 = ^(foo){
  if (foo == "foo")
    "x6-1"
  else if (foo.indexOf("foo2") != -1) {
    if (foo == "foo2-1")
      "x6-2-1"
    else
      "x6-2-2"
  } else
    "x6-3"
}
assert.equal x6("foo2"), "x6-2-2"
assert.equal x6("foo2-1"), "x6-2-1"

# Test for bug where each statement in a block would be wrapped in a return
x7 = ^(foo){
  if (foo == "foo") {
    if (foo == "foo")
      "should not be returned"
    "x7-1"
  } else {
    "should not be returned"
    "x7-2"
  }
}
assert.equal x7("foo"), "x7-1"
assert.equal x7("xxx"), "x7-2"
