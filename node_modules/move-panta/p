From af396bc50a83dea1a5524964869254a2ee40907c Mon Sep 17 00:00:00 2001
From: max99x <max99x@gmail.com>
Date: Wed, 7 Sep 2011 23:40:13 +0300
Subject: [PATCH 1/3] Split raw option into wrapSource and includeRuntime.

---
 lib/compiler/index.js |   32 ++++++++++++++++++++------------
 1 file changed, 20 insertions(+), 12 deletions(-)

diff --git a/lib/compiler/index.js b/lib/compiler/index.js
index bbc1304..4c03445 100644
--- a/lib/compiler/index.js
+++ b/lib/compiler/index.js
@@ -33,7 +33,9 @@ exports.defaultCompilationOptions = {
   outputFormatting: {indent_level: 2, beautify: true},
   detailedOutput: false, // if true, return {ast: <ast>, code: <code>}
   strict: true, // adds '"use strict";' to the head of generated js code
-  raw: false // Do not wrap source and do not enable runtime
+  raw: false, // Disable keyword args that require the Move runtime.
+  wrapSource: true, // Wrap source in a closure.
+  includeRuntime: true // Import runtime into the compiled source
 };
 
 
@@ -166,8 +168,8 @@ exports.compile = function compile(source, options) {
 
   // Prepare source
   source += '\n';
-  if (!op.raw)
-    source = wrapInRuntime(source, op);
+  if (op.includeRuntime) source = includeRuntime(source, op);
+  if (op.wrapSource) source = wrapSource(source);
 
   // Parse Move and/or JavaScript source
   try {
@@ -220,18 +222,18 @@ exports.compile = function compile(source, options) {
   var jscode = processor.gen_code(ast, op.outputFormatting);
 
   // Adjust wrap to module stub
-  if (!op.raw && op.moduleStub) {
+  if (op.wrapSource && op.moduleStub) {
     jscode = jscode.replace(/^\(function\s*\(\)\s*\{/, 'function(require,module,exports){')
                    .replace(/\)\(\);$/, '');
   }
 
   // Add "use strict"
   if (op.strict) {
-    if (op.raw) {
-      jscode = '"use strict";'+jscode;
-    } else {
+    if (op.wrapSource) {
       jscode = jscode.replace(/\(function\s*\(\)\s*\{/,
                               '(function(){"use strict";');
+    } else {
+      jscode = '"use strict";'+jscode;
     }
   }
 
@@ -396,9 +398,15 @@ var parseKWArgs = function parseKWArgs(args, spec) {
 }
 
 
-// Wraps raw Move source, enabling access to the runtime library
-var wrapInRuntime = function wrapInRuntime(source, op) {
-  var s = '(function() { ';
+// Wraps raw Move source in a closure
+var wrapSource = function wrapSource(source) {
+  return '(function() {' + source + '})()';
+}
+
+
+// Adds runtime to the Move source, enabling access to the runtime library
+var includeRuntime = function includeRuntime(source, op) {
+  var s = '';
   if (!op.automaticVarDeclarations)
     s += 'var ';
   s += 'Move = __move.runtime';
@@ -408,7 +416,7 @@ var wrapInRuntime = function wrapInRuntime(source, op) {
            return name + ' = Move.'+name;
          }).join(',');
   }
-  return s + '; ' + source + '})()';
+  return s + '; ' + source;
 }
 
 // Provide CommonJS module service for loading move code
@@ -426,4 +434,4 @@ Object.keys(exports).forEach(function (k) {
 });
 
 // Import the runtime library
-require('../runtime');
\ No newline at end of file
+require('../runtime');
-- 
1.7.10


From b490bd9b9104f56b3fdbd8329a421f254a7d4028 Mon Sep 17 00:00:00 2001
From: max99x <max99x@gmail.com>
Date: Thu, 8 Sep 2011 00:11:45 +0300
Subject: [PATCH 2/3] Added execute permission to browser/build.sh.

---
 0 files changed
 mode change 100644 => 100755 browser/build.sh

diff --git a/browser/build.sh b/browser/build.sh
old mode 100644
new mode 100755
-- 
1.7.10


From 08cbc5d06e2ff1cd3bbfe21e56fd893b10635a42 Mon Sep 17 00:00:00 2001
From: max99x <max99x@gmail.com>
Date: Thu, 8 Sep 2011 04:30:06 +0300
Subject: [PATCH 3/3] Made raw option override wrapSource and includeRuntime.

---
 lib/compiler/index.js |   10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/lib/compiler/index.js b/lib/compiler/index.js
index 4c03445..35d7db6 100644
--- a/lib/compiler/index.js
+++ b/lib/compiler/index.js
@@ -33,9 +33,9 @@ exports.defaultCompilationOptions = {
   outputFormatting: {indent_level: 2, beautify: true},
   detailedOutput: false, // if true, return {ast: <ast>, code: <code>}
   strict: true, // adds '"use strict";' to the head of generated js code
-  raw: false, // Disable keyword args that require the Move runtime.
+  raw: false, // Do not depend on or include the Move runtime library.
   wrapSource: true, // Wrap source in a closure.
-  includeRuntime: true // Import runtime into the compiled source
+  includeRuntime: true // Import runtime into the compiled source.
 };
 
 
@@ -94,6 +94,12 @@ exports.compile = function compile(source, options) {
   // Coalesce options
   if (typeof options === 'object') for (var k in options) op[k] = options[k];
 
+  // Raw mode overrides wrapSource and includeRuntime.
+  if (op.raw) {
+    op.wrapSource = false;
+    op.includeRuntime = false;
+  }
+
   // Obscure and should-not-be-changed-by-user options
   op.strictMode = false; // Puts the parser in strict mode
   op.embedTokens = false; // Enables embedding of node meta into the AST -- might break ast transforms
-- 
1.7.10
